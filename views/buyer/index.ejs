<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title> Buyer Web Page</title>
    <!-- Custom fonts for this template-->
    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">
    <link rel="stylesheet" href="/public/css/style.css">
<body>
    <header>
        <nav class="navbar">
            <div class="logo">PAO Market
                <button class="profile-btn" onclick="toggleProfileDropdown()"> 
                    <img 
                        src="<%= userLogin.profilePicture ? userLogin.profilePicture : '/public/img/default-profile.png' %>" 
                        alt="Profile Icon" 
                        class="profile-icon">
                </button>
            </div>
           
            <ul class="nav-links">
                <!-- Edit Information Icon -->
                <li>
                    <button class="edit-info-btn" onclick="openEditModal()">
                        <img src="/public/img/edit-user.png" alt="Edit Icon" class="edit-icon">
                        <span class="icon-label">Edit Information</span>
                    </button>
                </li>
                
                <!-- Profile Edit Modal -->
                <div id="editInfoModal" class="modal">
                    <form action="/updateUserInfo" method="POST" enctype="multipart/form-data">
                        <button type="button" class="close-btn" onclick="closeEditModal()">✖</button>

                        <!-- Profile Picture -->
                        <label>Profile Picture:</label>
                        <img id="editProfilePreview" src="/public/img/default-profile.png" alt="Profile Picture" width="100">
                        <input type="file" id="editProfileImage" name="image" accept="image/*" onchange="previewEditImage(event)">

                        <!-- First Name -->
                        <label>First Name:</label>
                        <input type="text" id="editFirstName" name="firstName" required>

                        <!-- Last Name -->
                        <label>Last Name:</label>
                        <input type="text" id="editLastName" name="lastName" required>

                        <!-- Phone Number -->
                        <label>Phone Number:</label>
                        <input type="text" id="editPhoneNumber" name="phoneNumber" required>

                        <!-- Password Fields -->
                        <label for="currentPassword">Current Password</label>
                        <input type="password" id="currentPassword" name="currentPassword" placeholder="(Optional)">
                        
                        <label for="newPassword">New Password</label>
                        <input type="password" id="newPassword" name="newPassword" placeholder="(Optional)" onkeyup="validatePassword()">
                        
                        <label for="confirmPassword">Confirm Password</label>
                        <input type="password" id="confirmPassword" name="confirmPassword" placeholder="(Optional)" onkeyup="validatePassword()">

                        <p id="passwordError" style="color: red; display: none;">Passwords do not match!</p>

                        <!-- Submit Button -->
                        <button type="submit">Update Profile</button>
                    </form>
                </div>

    
                    <!-- Currently Bids Icon -->
                <li>
                    <button class="bids-btn" onclick="viewCurrentBids()">
                        <img src="/public/img/clock_user.png" alt="Currently Bids Icon" class="bids-icon">
                        <span class="icon-label">Currently in Bid</span>
                    </button>
                </li>

                <!-- Modal for Displaying Current Bids -->
                <div id="currentBidsModal" class="modal">
                    <div class="modal-content">
                        <span class="close-btn" onclick="closeModal()">&times;</span>
                        <h2>Current Auction Bids</h2>
                        <div id="bidList">
                            <!-- Auction items will be loaded here dynamically -->
                        </div>
                    </div>
                </div>
            </ul>
            <!-- Dropdown Profile Container -->
            <div id="profileDropdown" class="profile-dropdown" style="display: none;">
                <div class="profile-info">
                    <!-- Display Profile Picture -->
                    <img 
                        src="<%= userLogin.profilePicture ? userLogin.profilePicture : '/public/img/default-profile.png' %>" 
                        alt="Profile Picture" 
                        class="profile-picture">
                    
                    <!-- User Information -->
                    <p><strong>Name:</strong> <%= userLogin.firstName %> <%= userLogin.lastName %></p>
                    <p><strong>Email:</strong> <%= userLogin.email %></p>
                    <p><strong>Phone Number:</strong> <%= userLogin.phoneNumber %></p>
                    <p><strong>Role:</strong> <%= userLogin.role %></p>
                    <p><strong>Gender:</strong> <%= userLogin.gender %></p>
                    <button onclick="toggleProfileDropdown()">Close</button>
                </div>
            </div>
            <div class="search-container">
                <button id="notificationButton" class="notification-button">
                    <img src="/public/img/bell.png" alt="Notification Icon" class="notification-icon">
                    <span class="notification-count" id="notificationCount">
                        <%= notifications.filter(notification => notification.status === 'unread').length %> <!-- Count unread notifications -->
                    </span>
                </button>
                
     
                <div class="settings-container">
                    <button class="settings-button" onclick="toggleSettingsDropdown()">
                        <img src="/public/img/settings.png" alt="Settings Icon" class="settings-icon">
                    </button>
                    <div class="settings-dropdown" id="settingsDropdown">
                        <ul>
                            <form action="/logout" method="post">
                                <li class="dropdown-item">
                                <button type="submit" class="btn btn-link nav-link w-100 text-left" >sign out</button>
                              </li>
                            </form>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    
    <main>
        
        <section class="banner">
            <h1>Feed your family the best</h1>
            <p>Exclusive Offer - 30% Off</p>
            <span>From ₱50.99</span>
        </section>
        <div class="category-bar">
            <label for="your-products" class="products-label">Featured Products</label>
            <div class="categories-list">
                <span class="category-item all-products" onclick="showAllProducts()">All Products</span>
                <% if (categories && categories.length > 0) { %>
                    <% categories.forEach(category => { %>
                        <span class="category-item" onclick="filterProducts('<%= category._id %>')">
                            <%= category.name %>
                        </span>
                    <% }) %>
                <% } else { %>
                    <span>No categories available</span>
                <% } %>
            </div>
        
            <div class="search-container">
                <input type="text" id="searchInput" placeholder="Search for a product..." onkeyup="searchProducts()">
                <button>Search</button>
            </div>
        </div>    
        
        <section class="product-list">
            <!-- All Products Section -->
            <div id="all-products-section">
                
                <!-- Retail Products -->
                <% if (retailProducts && retailProducts.length > 0) { %>
                    <h2>Retail Products</h2>
                    <div class="product-container">
                        <% retailProducts.forEach(product => { %>
                            <% if (product.status === 'approved') { %> <!-- Only show approved products -->
                                <div class="product">
                                    <div class="product-image-container">
                                        <img src="<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : '/public/img/default.png' %>" 
                                            alt="<%= product.name %>" class="product-image">
                                    </div>
                                    <h4><%= product.name %></h4>
                                    <p>Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                    <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                    <button class="showbuyer" 
                                        onclick="openBuyNowModal(
                                            '<%= product._id %>', 
                                            '<%= product.name %>', 
                                            '<%= product.productType %>', 
                                            '<%= product.productInfo %>', 
                                            '<%= product.minPrice ? product.minPrice.toFixed(2) : `Not Available` %>', 
                                            '<%= product.seller ? product.seller.firstName + `` + product.seller.lastName : `Unknown Seller` %>',
                                            '<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : `/public/img/default.png`%>'
                                        )">
                                        Buy Now
                                    </button>
                                </div>
                            <% } %>
                        <% }) %>
                    </div>
                <% } %>
        
                <!-- Wholesale Products -->
                <% if (wholesaleProducts && wholesaleProducts.length > 0) { %>
                    <h2>Wholesale Products</h2>
                    <div class="product-container">
                        <% wholesaleProducts.forEach(product => { %>
                            <% if (product.status === 'approved') { %> <!-- Only show approved products -->
                                <div class="product">
                                    <div class="product-image-container">
                                        <img src="<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : '/public/img/default.png' %>" 
                                            alt="<%= product.name %>" class="product-image">
                                    </div>
                                    <h4><%= product.name %></h4>
                                    <p>Minimum Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                    <!-- Display Wholesale Quantity and Unit (Only for Wholesale Products) -->
                                    <% if (product.productType === 'wholesale' && product.wholesaleQuantity && product.wholesaleUnit) { %>
                                        <p>Quantity: <%= product.wholesaleQuantity %> <%= product.wholesaleUnit %></p>
                                    <% } %>
                                    <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                    <%
                                    const auctionEndTime = new Date(product.auctionEnd);
                                    const currentTime = new Date();
                                    const isAuctionEnded = currentTime >= auctionEndTime;
                                    %>

                                    <% if (!isAuctionEnded) { %>
                                        <button class="participated" 
                                            onclick="openParticipateModal(
                                                '<%= product._id %>',
                                                '<%= product.name %>',
                                                '<%= product.productType %>',
                                                '<%= product.minPrice ? product.minPrice.toFixed(2) : `Not Available` %>',
                                                '<%= product.seller ? product.seller.firstName + ` ` + product.seller.lastName : `Unknown Seller` %>',
                                                '<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : `/public/img/default.png` %>',
                                                '<%= product.auctionStart %>',
                                                '<%= product.auctionEnd %>'
                                            )">
                                            Participate
                                        </button>
                                    <% } else { %>
                                        <a class="ended" disabled>Ended</a>
                                        <button class="show-winner" onclick="window.location.href='/buyer/auction/<%= product._id %>/results'">Show Winner</button>
                                    <% } %>
                                </div>
                            <% } %>
                        <% }) %>
                    </div>
                <% } %>
            </div>
            
            <!-- Category-Based Products Section -->
            <div id="category-products-section" style="display: none;">
                <% groupedProducts && groupedProducts.forEach(group => { %>
                    <div class="category-section" data-category-id="<%= group.category._id %>">
                        
                        <% if (group.retailProducts && group.retailProducts.length > 0) { %>
                            <h4>Retail Products</h4>
                            <div class="product-container">
                                <% group.retailProducts.forEach(product => { %>
                                    <% if (product.status === 'approved') { %> <!-- Only show approved products -->
                                        <div class="product">
                                            <div class="product-image-container">
                                                <img src="<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : '/public/img/default.png' %>" 
                                                    alt="<%= product.name %>" class="product-image">
                                            </div>
                                            <h4><%= product.name %></h4>
                                            <p>Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                            <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                            <button class="showbuyer" 
                                                onclick="openBuyNowModal(
                                                    '<%= product._id %>', 
                                                    '<%= product.name %>', 
                                                    '<%= product.productType %>', 
                                                    '<%= product.productInfo %>', 
                                                    '<%= product.minPrice ? product.minPrice.toFixed(2) : `Not Available` %>', 
                                                    '<%= product.seller ? product.seller.firstName + `` + product.seller.lastName : `Unknown Seller` %>',
                                                    '<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : `/public/img/default.png` %>'
                                                )">
                                                Buy Now
                                            </button>
                                        </div>
                                    <% } %>
                                <% }) %>
                            </div>
                        <% } %>
        
                        <% if (group.wholesaleProducts && group.wholesaleProducts.length > 0) { %>
                            <h2>Wholesale Products</h2>
                            <div class="product-container">
                                <% group.wholesaleProducts.forEach(product => { %>
                                    <% if (product.status === 'approved') { %> <!-- Only show approved products -->
                                        <div class="product">
                                            <div class="product-image-container">
                                                <img src="<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : '/public/img/default.png' %>" 
                                                    alt="<%= product.name %>" class="product-image">
                                            </div>
                                            <h4><%= product.name %></h4>
                                            <p>Minimum Price: ₱<%= product.minPrice ? product.minPrice.toFixed(2) : 'Not Available' %></p>
                                            <!-- Display Wholesale Quantity and Unit (Only for Wholesale Products) -->
                                            <% if (product.productType === 'wholesale' && product.wholesaleQuantity && product.wholesaleUnit) { %>
                                                <p>Quantity: <%= product.wholesaleQuantity %> <%= product.wholesaleUnit %></p>
                                            <% } %>
                                            <p>Pickup Address: <%= product.pickupAddress || 'Not Available' %></p>
                                            
                                            <%
                                            const auctionEndTime = new Date(product.auctionEnd);
                                            const currentTime = new Date();
                                            const isAuctionEnded = currentTime >= auctionEndTime;
                                            %>

                                            <% if (!isAuctionEnded) { %>
                                                <button class="participated" 
                                                    onclick="openParticipateModal(
                                                        '<%= product._id %>',
                                                        '<%= product.name %>',
                                                        '<%= product.productType %>',
                                                        '<%= product.minPrice ? product.minPrice.toFixed(2) : `Not Available` %>',
                                                        '<%= product.seller ? product.seller.firstName + ` ` + product.seller.lastName : `Unknown Seller` %>',
                                                        '<%= product.image ? '/public/img/product/' + product.image.split('/').pop() : `/public/img/default.png` %>',
                                                        '<%= product.auctionStart %>',
                                                        '<%= product.auctionEnd %>'
                                                    )">
                                                    Participate
                                                </button>
                                            <% } else { %>
                                                <a class="ended" disabled>Ended</a>
                                                <button class="show-winner" onclick="window.location.href='/buyer/auction/<%= product._id %>/results'">Show Winner</button>
                                            <% } %>
                                        </div>
                                    <% } %>
                                <% }) %>
                            </div>
                        <% } %>
                    </div>
                <% }) %>
            </div>
        </section>
        
                


        <!-- Buy Now Modal -->
        <div id="buyNowModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closebuyNowModal()">&times;</span>
                <h2>Product Details</h2>
                <!-- Product Image -->
                <img id="modal-product-image" src="/img/default.png" alt="Product Image" style="width: 100%; max-height: 300px; object-fit: contain;">
                <p><strong>Name:</strong> <span id="productName"></span></p>
                <p><strong>Type:</strong> <span id="productType"></span></p>
                <p><strong>Description:</strong> <span id="productDescription"></span></p>
                <p><strong>Price (per kilo):</strong> <span id="productPrice"></span></p>
                <p><strong>Seller:</strong> <span id="productSeller"></span></p> <!-- Display Seller Name -->
                <label for="quantity">Quantity (kg):</label>
                <input type="number" id="quantity" min="1" value="1" oninput="updateTotalPrice()"> 
                <p><strong>Total Price:</strong> ₱<span id="totalPrice">0.00</span></p> <!-- Display Total Price -->
                <button onclick="confirmBuyNow()">Confirm Purchase</button>
            </div>
        </div>
            
        <!-- Participate Modal -->
        <div id="participateModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeParticipateModal()">&times;</span>
                <h2>Auction Details</h2>
                <img id="modal-auction-image" src="" alt="Auction Product" style="width: 100%; max-height: 300px; object-fit: contain;">
                <p><strong>Name:</strong> <span id="auctionProductName"></span></p>
                <p><strong>Type:</strong> <span id="auctionProductType"></span></p>
                <p><strong>Minimum Price:</strong> ₱<span id="auctionProductPrice"></span></p>
                <p><strong>Seller:</strong> <span id="auctionProductSeller"></span></p>
                <p><strong>Session Start Date & Time:</strong> <span id="auctionStartTime"></span></p>
                <p><strong>Session End Date & Time:</strong> <span id="auctionEndTime"></span></p>
                <form action="/buyer/confirm-participation" method="post">
                    <input type="text" name="productId" id="productId" style="display: none;">
                    <button type="submit">Confirm Participation</button>
                </form>
                <% if (messages.success) { %>
                    
                <% } %>
            </div>
        </div>
        <div id="flash-messages"
            data-success="<%= messages.success ? messages.success[0] : '' %>"
            data-error="<%= messages.error ? messages.error[0] : '' %>">
        </div>

           
    </main>
    <footer>
        <div class="footer-left">
            
        </div>
        
        <!-- Modal for notifications -->
        <div id="notificationModal" class="modal">
            <div class="modal-content">
                <span class="close" id="closeModalButton">&times;</span>
                <center><h3>Notifications</h3></center>
                <ul id="notificationList">
                    <% notifications.forEach(notification => { %>
                        <li id="notification-<%= notification._id %>" class="notification <%= notification.status === 'unread' ? 'unread' : 'read' %>">
                            <p><%= notification.message %></p>
                            <% if (notification.status === 'unread') { %>
                                <a href="/buyer/notification?notification_id=<%= notification._id %>" class="btn btn-primary mark-as-read">
                                    Seen
                                </a>
                            <% } %>
                            <span class="close-notification" onclick="closeNotification('<%= notification._id %>')">&times;</span>
                        </li>
                    <% }); %>
                </ul>
                
                
            </div>
        </div>
        
        <div class="footer-right">
            <img src="/public/img/clock.png" alt="Clock Icon" class="clock-icon">
            <span id="currentTime" class="current-time"></span>
        </div>
        <p>&copy; 2024 PAO Market. All rights reserved.</p>
    </footer>

<script>


function openEditModal() {
    document.getElementById("editInfoModal").style.display = "flex";
}

function closeEditModal() {
    document.getElementById("editInfoModal").style.display = "none";
}

// Close modal when clicking outside
window.onclick = function(event) {
    var modal = document.getElementById("editInfoModal");
    if (event.target == modal) {
        closeEditModal();
    }
}

// Preview image before uploading
function previewEditImage(event) {
    var reader = new FileReader();
    reader.onload = function () {
        var output = document.getElementById("editProfilePreview");
        output.src = reader.result;
    };
    reader.readAsDataURL(event.target.files[0]);
}
function openEditModal() {
        fetch('/getUserInfo') // Fetch user info from the backend
            .then(response => response.json())
            .then(data => {
                document.getElementById("editFirstName").value = data.firstName;
                document.getElementById("editLastName").value = data.lastName;
                document.getElementById("editPhoneNumber").value = data.phoneNumber;
                
                // Update profile picture preview
                if (data.profilePicture) {
                    document.getElementById("editProfilePreview").src = data.profilePicture;
                }

                document.getElementById("editInfoModal").style.display = "block";
            })
            .catch(error => console.error("Error fetching user data:", error));
    }

document.addEventListener('DOMContentLoaded', function() {
               // Get the modal and notification button
               const modal = document.getElementById("notificationModal");
               const notificationButton = document.getElementById("notificationButton");
               const closeModalButton = document.getElementById("closeModalButton");
       
               // Open the modal when the notification button is clicked
               notificationButton.onclick = function() {
                   modal.style.display = "block";
               }
       
               // Close the modal when the close button is clicked
               closeModalButton.onclick = function() {
                   modal.style.display = "none";
               }
       
               // Close the modal if the user clicks outside of the modal
               window.onclick = function(event) {
                   if (event.target == modal) {
                       modal.style.display = "none";
                   }
               }
       
               // Attach event listeners for each "close" button in the notification list
               const closeButtons = document.querySelectorAll('.close-notification');
               closeButtons.forEach(button => {
                   button.addEventListener('click', function(event) {
                       const notificationId = event.target.getAttribute('data-notification-id');
                       closeNotification(notificationId);
                   });
               });
           });
       
           // Function to close individual notification
           // Close notification and hide it temporarily using localStorage
       function closeNotification(notificationId) {
           // Save the closed notification ID to localStorage
           let closedNotifications = JSON.parse(localStorage.getItem('closedNotifications')) || [];
           closedNotifications.push(notificationId);
           localStorage.setItem('closedNotifications', JSON.stringify(closedNotifications));
       
           // Hide the notification element on the page
           const notificationElement = document.getElementById(`notification-${notificationId}`);
           notificationElement.style.display = 'none';
       }
       // Check localStorage for closed notifications and hide them on page load
       window.onload = function() {
           const closedNotifications = JSON.parse(localStorage.getItem('closedNotifications')) || [];
       
           // Hide all closed notifications
           closedNotifications.forEach(notificationId => {
               const notificationElement = document.getElementById(`notification-${notificationId}`);
               if (notificationElement) {
                   notificationElement.style.display = 'none';
               }
           });
       };

    // Farmer approves order and sets pickup address
    document.querySelectorAll(".approve-order").forEach(button => {
        button.addEventListener("click", function () {
            const orderId = this.getAttribute("data-order-id");
            const pickupAddress = document.getElementById(`pickup-address-${orderId}`).value;

            if (!pickupAddress) {
                alert("Please enter a pickup address.");
                return;
            }

            fetch(`/farmer/approve-order/${orderId}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ pickupAddress })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Order approved! Buyer has been notified.");
                } else {
                    alert("Error approving order.");
                }
            })
            .catch(error => console.error("Error:", error));
        });
    });



// ✅ Function to send reply
// Toggle profile dropdown visibility
function toggleProfileDropdown() {
    const dropdown = document.getElementById("profileDropdown");
    dropdown.style.display = (dropdown.style.display === "block" ? "none" : "block");
}
function closeProfileDropdown() {
    const dropdown = document.getElementById("profileDropdown");
    // Simply hide the profile dropdown without logout functionality
    dropdown.style.display = "none";
}
window.onclick = function(event) {
    if (!event.target.matches('.profile-btn') && !event.target.matches('#profileDropdown') && !event.target.matches('.profile-info')) {
        // Hide the dropdown if clicking outside
        document.getElementById("profileDropdown").style.display = "none";
    }
}
// Toggle settings dropdown visibility
function toggleSettingsDropdown() {
    const settingsDropdown = document.getElementById("settingsDropdown");
    // Toggle the display of the settings dropdown
    settingsDropdown.style.display = (settingsDropdown.style.display === "block" ? "none" : "block");
}
function closeModal() {
    const modal = document.getElementById("auctionModal");
    modal.style.display = "none";
}
function searchProducts() {
    console.log("Search button clicked");
}
window.onclick = function(event) {
    const modal = document.getElementById("auctionModal");
    if (event.target === modal) {
        closeModal();
    }
}
function searchProducts() {
    console.log("Search button clicked");
}

function updateClock() {
    const currentTime = document.getElementById('currentTime');
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    const seconds = now.getSeconds().toString().padStart(2, '0');
    currentTime.textContent = `${hours}:${minutes}:${seconds}`;
}
updateClock();
setInterval(updateClock, 1000);
function toggleSettingsDropdown() {
    const dropdown = document.getElementById('settingsDropdown');
    dropdown.style.display = (dropdown.style.display === 'block') ? 'none' : 'block';
}
// Optional: Close the dropdown when clicking anywhere else on the page
window.onclick = function(event) {
    const dropdown = document.getElementById('settingsDropdown');
    if (!event.target.matches('.settings-button') && !event.target.matches('.settings-icon')) {
        if (dropdown.style.display === 'block') {
            dropdown.style.display = 'none';
        }
    }
};
// Simulate user authentication state
let isLoggedIn = false; // Change this to `true` to simulate a logged-in user


document.getElementById('closeModal').addEventListener('click', closeModal);

window.onclick = function (event) {
    const modal = document.getElementById('authModal');
    if (event.target === modal) {
        closeModal();
    }
};
document.addEventListener("DOMContentLoaded", function() {
        showAllProducts();
    });
function showAllProducts() {
    document.getElementById("all-products-section").style.display = "block";
    document.getElementById("category-products-section").style.display = "none";
}

function filterProducts(categoryId) {
    document.getElementById('all-products-section').style.display = 'none';
    document.getElementById('category-products-section').style.display = 'block';

    let sections = document.querySelectorAll('.category-section');
    sections.forEach(section => {
        section.style.display = section.getAttribute('data-category-id') === categoryId ? 'block' : 'none';
    });
}
function searchProducts() {
    let input = document.getElementById("searchInput").value.toLowerCase();
    let products = document.querySelectorAll(".product");
        products.forEach(product => {
            let productName = product.querySelector("h4").textContent.toLowerCase();
            
            if (productName.includes(input)) {
                product.style.display = "block"; // Show if it matches
            } else {
                product.style.display = "none"; // Hide if it doesn't match
    }
});

        // Hide empty category sections
        document.querySelectorAll(".category-section").forEach(section => {
            let visibleProducts = section.querySelectorAll(".product[style='display: block;']").length;
            
            if (visibleProducts > 0) {
                section.style.display = "block";
            } else {
                section.style.display = "none";
            }
        });
    }
     // Function to close individual notification
    // Close notification and hide it temporarily using localStorage
function closeNotification(notificationId) {
    // Save the closed notification ID to localStorage
    let closedNotifications = JSON.parse(localStorage.getItem('closedNotifications')) || [];
    closedNotifications.push(notificationId);
    localStorage.setItem('closedNotifications', JSON.stringify(closedNotifications));

    // Hide the notification element on the page
    const notificationElement = document.getElementById(`notification-${notificationId}`);
    notificationElement.style.display = 'none';
}
// Check localStorage for closed notifications and hide them on page load
window.onload = function() {
    const closedNotifications = JSON.parse(localStorage.getItem('closedNotifications')) || [];

    // Hide all closed notifications
    closedNotifications.forEach(notificationId => {
        const notificationElement = document.getElementById(`notification-${notificationId}`);
        if (notificationElement) {
            notificationElement.style.display = 'none';
        }
    });
};

    setInterval(fetchNotifications, 5000); // Refresh every 5 seconds

 // Function to open the Buy Now modal with product details
function openBuyNowModal(id, name, type, description, price, seller, image) {
    document.getElementById('productName').textContent = name;
    document.getElementById('productName').setAttribute('data-product-id', id);
    document.getElementById('productType').textContent = type;
    document.getElementById('productDescription').textContent = description;
    document.getElementById('productPrice').textContent = price;
    document.getElementById('productSeller').textContent = seller;
    document.getElementById('modal-product-image').src = image;
    
    // Set default quantity to 1 and update total price accordingly
    document.getElementById('quantity').value = 1;
    updateTotalPrice();
    
    document.getElementById('buyNowModal').style.display = "block";
}

// Function to close the modal
function closebuyNowModal() {
    document.getElementById('buyNowModal').style.display = 'none';
}

// Function to update total price based on quantity input
function updateTotalPrice() {
    const pricePerKilo = parseFloat(document.getElementById('productPrice').innerText) || 0;
    const quantity = parseInt(document.getElementById('quantity').value) || 1;
    
    const totalPrice = pricePerKilo * quantity;
    document.getElementById('totalPrice').innerText = totalPrice.toFixed(2);
}

// Ensure total price updates when quantity changes
document.getElementById('quantity').addEventListener('input', updateTotalPrice);

// Function to confirm purchase
function confirmBuyNow() {
    const productId = document.getElementById('productName').getAttribute('data-product-id'); 
    const quantity = Number(document.getElementById('quantity').value);
    const pricePerKilo = Number(document.getElementById('productPrice').innerText); 
    const modal = document.getElementById('buyNowModal'); // Get the modal

    if (!productId || quantity < 1 || isNaN(pricePerKilo) || pricePerKilo <= 0) {
        Swal.fire({
            icon: "warning",
            title: "Invalid Input",
            text: "Please enter a valid quantity and ensure the product and price are correct."
        });
        return;
    }

    const totalPrice = quantity * pricePerKilo;

    // Close the custom modal
    if (modal) {
        modal.style.display = "none"; // Hide the modal
    }

    fetch('/buyer/confirm-purchase', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity, totalPrice })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Show success message after modal disappears
            Swal.fire({
                icon: "success",
                title: "Purchase Successful",
                text: "Your order has been placed successfully!",
                showConfirmButton: true
            }).then(() => {
                window.location.reload(); // Reload page after confirmation
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: data.message
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: "error",
            title: "Failed",
            text: "Failed to confirm purchase. Please try again."
        });
    });
}



function openParticipateModal(productId, name, productType, minPrice, seller, image, startTime, endTime) {
    // Set productId inside the hidden input field  
    document.getElementById("productId").value = productId;
    document.getElementById("auctionProductName").textContent = name;
    document.getElementById("auctionProductType").textContent = productType;
    document.getElementById("auctionProductPrice").textContent = minPrice;
    document.getElementById("auctionProductSeller").textContent = seller;
    document.getElementById("modal-auction-image").src = image;

    // Format and display start and end times with both date and time
    document.getElementById("auctionStartTime").textContent = formatDateTime(startTime);
    document.getElementById("auctionEndTime").textContent = formatDateTime(endTime);

    document.getElementById("participateModal").style.display = "block";
}

// Function to format date and time properly
function formatDateTime(dateTime) {
    const date = new Date(dateTime);
    return date.toLocaleString(); // Formats as "MM/DD/YYYY, HH:MM:SS AM/PM"
}

// Close modal function
function closeParticipateModal() {
    document.getElementById("participateModal").style.display = "none";
}

// Handle participation form submission with AJAX
document.getElementById("participationForm").addEventListener("submit", async function(event) {
    event.preventDefault(); // Prevent default form submission

    const productId = document.getElementById("productId").value;

    const response = await fetch("/buyer/confirm-participation", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ productId })
    });

    const result = await response.json();
    if (result.success) {
        alert("Participation confirmed!");
        window.location.href = "/buyer/index.ejs"; // Redirect to index page
    } else {
        alert(result.message);
    }
});

// Function to format date (YYYY-MM-DD to readable format)
function formatDate(dateTime) {
    if (!dateTime) return "N/A";
    const date = new Date(dateTime);
    return date.toLocaleDateString("en-US", { year: 'numeric', month: 'long', day: 'numeric' });
}

// Function to format time (HH:mm format)
function formatTime(dateTime) {
    if (!dateTime) return "N/A";
    const date = new Date(dateTime);
    return date.toLocaleTimeString("en-US", { hour: '2-digit', minute: '2-digit', hour12: true });
}

function viewCurrentBids() {
    fetch('/buyer/current-bids')
        .then(response => response.json())
        .then(data => {
            const bidList = document.getElementById('bidList');
            bidList.innerHTML = '';

            if (data.success && data.bids.length > 0) {
                data.bids.forEach(bid => {
                    console.log('bid', bid.auctionEnd)
                    const auctionStartTime = bid.auctionStart ?? null;
                    const auctionEndTime = bid.auctionEnd ?? null;
                    const now = new Date();

                    let auctionStatus = '';
                    let auctionButton = '';

                    // if (!auctionStartTime || !auctionEndTime) {
                    //     auctionStatus = `<p class="error">Auction schedule not available.</p>`;
                    //     auctionButton = `<button disabled class="disabled-btn">No Auction Data</button>`;
                    // } else if (now < auctionStartTime) {
                    //     auctionStatus = `<p class="upcoming">Auction starts on: ${auctionStartTime.toLocaleString()}</p>`;
                    //     auctionButton = `<button disabled class="disabled-btn">Auction Not Started</button>`;
                    // } else if (now >= auctionStartTime && now <= auctionEndTime) {
                    //     auctionStatus = `<p class="ongoing">Auction is Live!</p>`;
                    //     auctionButton = `<button onclick="joinAuction('${bid.auctionId}')">Join Auction</button>`;
                    // } else {
                    //     auctionStatus = `<p class="ended">Auction Ended</p>`;
                    //     auctionButton = `<button disabled class="disabled-btn">Auction Ended</button>`;
                    // }

                    const bidItem = `
                        <div class="bid-item">
                            <img src="/public${bid.productImage}" alt="Product Image" class="bid-product-img" style="width: 100%; height: auto; max-height: 300px; object-fit: contain; display: block; margin: auto;"> 
                            <h3>${bid.productName}</h3>
                            <p>Description: ${bid.productDescription}</p>
                            <p>Minimum Price: ₱${bid.minimumPrice}</p>
                            <p>Seller: ${bid.sellerName}</p>
                        
                            <p class="ongoing">Auction is Live!</p>
                       <a href="auction/room/${bid.pId}" style="background-color: green; color: white; border: none; padding: 10px 15px; border-radius: 5px; cursor: pointer;">
                        Join Auction
                        </a>

                        </div>
                    `;
                    bidList.innerHTML += bidItem;
                });
            } else {
                bidList.innerHTML = '<p>No active bids found.</p>';
            }

            document.getElementById('currentBidsModal').style.display = 'block';
        })
        .catch(error => {
            console.error('Error fetching bids:', error);
            alert('Failed to load auction bids. Please try again.');
        });
}

function closeModal() {
    document.getElementById('currentBidsModal').style.display = 'none';
}

function joinAuction(auctionId) {
    if (!auctionId) {
        alert('Invalid auction session.');
        return;
    }
    window.location.href = `/buyer/auction/session/${auctionId}`;
}


document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById("notificationModal");
    const notificationButton = document.getElementById("notificationButton");
    const closeModalButton = document.getElementById("closeModalButton");

    // Open modal when notification button is clicked
    notificationButton.addEventListener("click", function () {
        modal.style.display = "block";
    });

    // Close modal when close button is clicked
    closeModalButton.addEventListener("click", function () {
        modal.style.display = "none";
    });

    // Close modal when clicking outside of modal content
    window.addEventListener("click", function (event) {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    });
});


</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/public/js/messagescript.js"></script>
  
 
</body>
</html>